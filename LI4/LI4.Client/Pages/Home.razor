@page "/"
@rendermode InteractiveServer
@inject IMineBuildsLN facade
@inject IJSRuntime js
@inject NavigationManager Navigation

@using Util;

<div class="home-container">
    <div class="home-top">
        <div class="home-profile">
            <div class="mc-frame">
                <img src="https://minecraft.wiki/images/Player_Head_%288%29_JE5.png?6f81f&format=original">
            </div>
            <div class="home-profile-meta">
                <p>Welcome back, <span style="color: var(--secondary);">@username</span></p>
                <div style="display: flex; flex-direction: row; align-content: center; align-items: center; justify-content: flex-start; gap:  10px; height: 100%;">
                    <a class="mc-button" href="profile" style="width: fit-content; height: 70%; padding: 0 10px;">
                        <p class="mc-text-align" style="color: var(--highlight)">Edit Profile</p>
                    </a
                     <a class="mc-button" href="logout" style="width: fit-content; height: 70%; padding: 0 10px;">
                        <p class="mc-text-align" style="color: var(--highlight)">Logout</p>
                    </a>
                </div>
            </div>
        </div>
        <div class="home-line-stock">
            <a class="home-assembly-line" href="assembly_lines">
                <div class="mc-container" style="--size: 300px; width: var(--size); height: var(--size);">
                    <div class="title">
                        Assembly Line
                    </div>
                    <div class="mc-inner-container" style="--target-height: var(--size); justify-content: center; justify-items: center;">
                        <img src="/img/pictures/mechanical_arm.png" style="object-fit: contain; box-sizing: border-box; height: fit-content; width: fit-content; max-height: 95%; max-width: 100%;"/>
                    </div>
                </div>
            </a>
            <a class="home-stock" href="stock" style="height: 195px; text-align: center;">
                STOCK
            </a>
        </div>
    </div>
    <div class="home-bottom">
        <a class="mc-button" href="queue" style="padding: 0 10px;">
            <p class="mc-text-align" style="color: var(--highlight)">Queues</p>
        </a>
        <a class="mc-button" href="catalog" style="padding: 0 10px;">
            <p class="mc-text-align" style="color: var(--highlight)">Catalog</p>
        </a>
        <a class="mc-button" href="history" style="padding: 0 10px;">
            <p class="mc-text-align" style="color: var(--highlight)">Production History</p>
        </a>
    </div>
</div>

@code {
    private string username = "";
    protected override async void OnAfterRender(bool firstRender) {
        if (!firstRender) return;

        try {
            // var cookieValue = await js.InvokeAsync<string>("readCookie", "userAuth");
            // if (cookieValue is null) throw new Exception("Unable to read cookie value.");

            // int userId = 

            // Console.WriteLine("Cookie A: " + $">>{value}<<");

            string userAuth = await CookieUtil.getUserAuth(js);
            Console.WriteLine("User ID: " + $">>{userAuth}<<");

            // var user = await facade.getUserByEmailAsync("paulo@example.com");
            var user = await facade.getUserByEmailAsync(userAuth);

            if (user != null) {
                username = user.username;
            }

            await InvokeAsync(StateHasChanged);
        } catch (Exception ex) {
            username = "N/A";
        }
    }
}